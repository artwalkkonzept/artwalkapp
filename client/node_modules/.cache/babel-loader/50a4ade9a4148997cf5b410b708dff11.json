{"ast":null,"code":"import React,{Component}from\"react\";import UploadService from\"../services/file-upload.service\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default class Images extends Component{constructor(props){super(props);this.selectFiles=this.selectFiles.bind(this);this.upload=this.upload.bind(this);this.Images=this.Images.bind(this);this.state={selectedFiles:undefined,previewImages:[],progressInfos:[],message:[],imageInfos:[]};}componentDidMount(){UploadService.getFiles().then(response=>{this.setState({imageInfos:response.data});});}selectFiles(event){let images=[];for(let i=0;i<event.target.files.length;i++){images.push(URL.createObjectURL(event.target.files[i]));}this.setState({progressInfos:[],message:[],selectedFiles:event.target.files,previewImages:images});}upload(idx,file){let _progressInfos=[...this.state.progressInfos];UploadService.upload(file,event=>{_progressInfos[idx].percentage=Math.round(100*event.loaded/event.total);this.setState({progressInfos:_progressInfos});}).then(()=>{this.setState(prev=>{let nextMessage=[...prev.message,\"Uploaded the image successfully: \"+file.name];return{message:nextMessage};});return UploadService.getFiles();}).then(files=>{this.setState({imageInfos:files.data});}).catch(()=>{_progressInfos[idx].percentage=0;this.setState(prev=>{let nextMessage=[...prev.message,\"Could not upload the image: \"+file.name];return{progressInfos:_progressInfos,message:nextMessage};});});}Images(){const selectedFiles=this.state.selectedFiles;let _progressInfos=[];for(let i=0;i<selectedFiles.length;i++){_progressInfos.push({percentage:0,fileName:selectedFiles[i].name});}this.setState({progressInfos:_progressInfos,message:[]},()=>{for(let i=0;i<selectedFiles.length;i++){this.upload(i,selectedFiles[i]);}});}render(){const{previewImages,progressInfos,message,imageInfos}=this.state;return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsx(\"div\",{className:\"col-8\"})}),progressInfos&&progressInfos.map((progressInfo,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{children:progressInfo.fileName}),/*#__PURE__*/_jsx(\"div\",{className:\"progress\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"progress-bar progress-bar-info\",role:\"progressbar\",\"aria-valuenow\":progressInfo.percentage,\"aria-valuemin\":\"0\",\"aria-valuemax\":\"100\",style:{width:progressInfo.percentage+\"%\"},children:[progressInfo.percentage,\"%\"]})})]},index)),previewImages&&/*#__PURE__*/_jsx(\"div\",{children:previewImages.map((img,i)=>{return/*#__PURE__*/_jsx(\"img\",{className:\"preview\",src:img,alt:\"image-\"+i},i);})}),message.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"alert alert-secondary mt-2\",role:\"alert\",children:/*#__PURE__*/_jsx(\"ul\",{children:message.map((item,i)=>{return/*#__PURE__*/_jsx(\"li\",{children:item},i);})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"card mt-3\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:\"List of Files\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"list-group list-group-flush\",children:imageInfos&&imageInfos.map((img,index)=>/*#__PURE__*/_jsxs(\"li\",{className:\"list-group-item\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"a\",{href:img.url,children:img.name})}),/*#__PURE__*/_jsx(\"img\",{src:img.url,alt:img.name,height:\"80px\"})]},index))})]})]});}}/*\n<label className=\"btn btn-default p-0\">\n              <input type=\"file\" multiple accept=\"image/*\" onChange={this.selectFiles} />\n            </label>\n\n\n <div className=\"col-4\">\n            <button\n              className=\"btn btn-success btn-sm\"\n              disabled={!selectedFiles}\n              onClick={this.Images}\n            >\n              Upload\n            </button>\n          </div>*/","map":{"version":3,"sources":["/Users/admin/Desktop/artwalkapp-peter/artwalkapp/client/src/components/image.component.js"],"names":["React","Component","UploadService","Images","constructor","props","selectFiles","bind","upload","state","selectedFiles","undefined","previewImages","progressInfos","message","imageInfos","componentDidMount","getFiles","then","response","setState","data","event","images","i","target","files","length","push","URL","createObjectURL","idx","file","_progressInfos","percentage","Math","round","loaded","total","prev","nextMessage","name","catch","fileName","render","map","progressInfo","index","width","img","item","url"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport UploadService from \"../services/file-upload.service\";\n\nexport default class Images extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFiles = this.selectFiles.bind(this);\n    this.upload = this.upload.bind(this);\n    this.Images = this.Images.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      previewImages: [],\n      progressInfos: [],\n      message: [],\n\n      imageInfos: [],\n    };\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then((response) => {\n      this.setState({\n        imageInfos: response.data,\n      });\n    });\n  }\n\n  selectFiles(event) {\n    let images = [];\n\n    for (let i = 0; i < event.target.files.length; i++) {\n      images.push(URL.createObjectURL(event.target.files[i]))\n    }\n\n    this.setState({\n      progressInfos: [],\n      message: [],\n      selectedFiles: event.target.files,\n      previewImages: images\n    });\n  }\n\n  upload(idx, file) {\n    let _progressInfos = [...this.state.progressInfos];\n\n    UploadService.upload(file, (event) => {\n      _progressInfos[idx].percentage = Math.round((100 * event.loaded) / event.total);\n      this.setState({\n        progressInfos: _progressInfos,\n      });\n    })\n      .then(() => {\n        this.setState((prev) => {\n          let nextMessage = [...prev.message, \"Uploaded the image successfully: \" + file.name];\n          return {\n            message: nextMessage\n          };\n        });\n\n        return UploadService.getFiles();\n      })\n      .then((files) => {\n        this.setState({\n          imageInfos: files.data,\n        });\n      })\n      .catch(() => {\n        _progressInfos[idx].percentage = 0;\n        this.setState((prev) => {\n          let nextMessage = [...prev.message, \"Could not upload the image: \" + file.name];\n          return {\n            progressInfos: _progressInfos,\n            message: nextMessage\n          };\n        });\n      });\n  }\n\n  Images() {\n    const selectedFiles = this.state.selectedFiles;\n\n    let _progressInfos = [];\n\n    for (let i = 0; i < selectedFiles.length; i++) {\n      _progressInfos.push({ percentage: 0, fileName: selectedFiles[i].name });\n    }\n\n    this.setState(\n      {\n        progressInfos: _progressInfos,\n        message: [],\n      },\n      () => {\n        for (let i = 0; i < selectedFiles.length; i++) {\n          this.upload(i, selectedFiles[i]);\n        }\n      }\n    );\n  }\n\n  render() {\n    const { previewImages, progressInfos, message, imageInfos } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            \n\n          </div>\n\n         \n        </div>\n\n        {progressInfos &&\n          progressInfos.map((progressInfo, index) => (\n            <div className=\"mb-2\" key={index}>\n              <span>{progressInfo.fileName}</span>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar progress-bar-info\"\n                  role=\"progressbar\"\n                  aria-valuenow={progressInfo.percentage}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                  style={{ width: progressInfo.percentage + \"%\" }}\n                >\n                  {progressInfo.percentage}%\n                </div>\n              </div>\n            </div>\n          ))}\n\n        {previewImages && (\n          <div>\n            {previewImages.map((img, i) => {\n              return <img className=\"preview\" src={img} alt={\"image-\" + i}  key={i}/>;\n            })}\n          </div>\n        )}\n\n        {message.length > 0 && (\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\n            <ul>\n              {message.map((item, i) => {\n                return <li key={i}>{item}</li>;\n              })}\n            </ul>\n          </div>\n        )}\n\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">List of Files</div>\n          <ul className=\"list-group list-group-flush\">\n            {imageInfos &&\n              imageInfos.map((img, index) => (\n                <li className=\"list-group-item\" key={index}>\n                  <p><a href={img.url}>{img.name}</a></p>\n                  <img src={img.url} alt={img.name} height=\"80px\" />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n<label className=\"btn btn-default p-0\">\n              <input type=\"file\" multiple accept=\"image/*\" onChange={this.selectFiles} />\n            </label>\n\n\n <div className=\"col-4\">\n            <button\n              className=\"btn btn-success btn-sm\"\n              disabled={!selectedFiles}\n              onClick={this.Images}\n            >\n              Upload\n            </button>\n          </div>*/"]},"metadata":{},"sourceType":"module"}