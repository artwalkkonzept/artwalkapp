{"ast":null,"code":"import axios from\"axios\";import http from\"../http-common\";const API_URL=\"http://localhost:8080/api/artwalk/\";class ArtWalkDataService{login(username,password){return axios.post(API_URL+\"signin\",{username,password}).then(response=>{if(response.data.accessToken){localStorage.setItem(\"user\",JSON.stringify(response.data));}return response.data;});}logout(){localStorage.removeItem(\"user\");}register(username,email,password){return axios.post(API_URL+\"signup\",{username,email,password});}getCurrentUser(){return JSON.parse(localStorage.getItem('user'));;}//}\n//export default new ArtwalkService();\n//class ArtWalkDataService {\ngetAll(params){return http.get(\"/artwalks\",{params});}get(id){return http.get(\"/artwalks/\".concat(id));}create(data){return http.post(\"/artwalks\",data);}update(id,data){return http.put(\"/artwalks/\".concat(id),data);}delete(id){return http.delete(\"/artwalks/\".concat(id));}deleteAll(){return http.delete(\"/artwalks\");}findByTitle(title){return http.get(\"/artwalks?title=\".concat(title));}}export default new ArtWalkDataService();","map":{"version":3,"sources":["/Users/admin/Desktop/artwalkapp-peter/artwalkapp/client/src/services/artwalk.service.js"],"names":["axios","http","API_URL","ArtWalkDataService","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","getCurrentUser","parse","getItem","getAll","params","get","id","create","update","put","delete","deleteAll","findByTitle","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAGA,MAAOC,CAAAA,IAAP,KAAiB,gBAAjB,CAGA,KAAMC,CAAAA,OAAO,CAAG,oCAAhB,CAEA,KAAMC,CAAAA,kBAAmB,CACvBC,KAAK,CAACC,QAAD,CAAWC,QAAX,CAAqB,CACxB,MAAON,CAAAA,KAAK,CACTO,IADI,CACCL,OAAO,CAAG,QADX,CACqB,CACxBG,QADwB,CAExBC,QAFwB,CADrB,EAKJE,IALI,CAKCC,QAAQ,EAAI,CAChB,GAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAlB,CAA+B,CAC7BC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACC,IAAxB,CAA7B,EACD,CAED,MAAOD,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAXI,CAAP,CAYD,CAEDM,MAAM,EAAG,CACPJ,YAAY,CAACK,UAAb,CAAwB,MAAxB,EACD,CAEDC,QAAQ,CAACb,QAAD,CAAWc,KAAX,CAAkBb,QAAlB,CAA4B,CAClC,MAAON,CAAAA,KAAK,CAACO,IAAN,CAAWL,OAAO,CAAG,QAArB,CAA+B,CACpCG,QADoC,CAEpCc,KAFoC,CAGpCb,QAHoC,CAA/B,CAAP,CAKD,CAEDc,cAAc,EAAG,CACf,MAAON,CAAAA,IAAI,CAACO,KAAL,CAAWT,YAAY,CAACU,OAAb,CAAqB,MAArB,CAAX,CAAP,CAAgD,CACjD,CACH;AAEA;AAEA;AACEC,MAAM,CAACC,MAAD,CAAS,CACb,MAAOvB,CAAAA,IAAI,CAACwB,GAAL,CAAS,WAAT,CAAsB,CAAED,MAAF,CAAtB,CAAP,CACD,CAEDC,GAAG,CAACC,EAAD,CAAK,CACN,MAAOzB,CAAAA,IAAI,CAACwB,GAAL,qBAAsBC,EAAtB,EAAP,CACD,CAEDC,MAAM,CAACjB,IAAD,CAAO,CACX,MAAOT,CAAAA,IAAI,CAACM,IAAL,CAAU,WAAV,CAAuBG,IAAvB,CAAP,CACD,CAEDkB,MAAM,CAACF,EAAD,CAAKhB,IAAL,CAAW,CACf,MAAOT,CAAAA,IAAI,CAAC4B,GAAL,qBAAsBH,EAAtB,EAA4BhB,IAA5B,CAAP,CACD,CAEDoB,MAAM,CAACJ,EAAD,CAAK,CACT,MAAOzB,CAAAA,IAAI,CAAC6B,MAAL,qBAAyBJ,EAAzB,EAAP,CACD,CAEDK,SAAS,EAAG,CACV,MAAO9B,CAAAA,IAAI,CAAC6B,MAAL,CAAY,WAAZ,CAAP,CACD,CAEDE,WAAW,CAACC,KAAD,CAAQ,CACjB,MAAOhC,CAAAA,IAAI,CAACwB,GAAL,2BAA4BQ,KAA5B,EAAP,CACD,CA9DsB,CAiEzB,cAAe,IAAI9B,CAAAA,kBAAJ,EAAf","sourcesContent":["import axios from \"axios\";\n\n\nimport http from \"../http-common\";\n\n\nconst API_URL = \"http://localhost:8080/api/artwalk/\";\n\nclass ArtWalkDataService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n//}\n\n//export default new ArtwalkService();\n\n//class ArtWalkDataService {\n  getAll(params) {\n    return http.get(\"/artwalks\", { params });\n  }\n\n  get(id) {\n    return http.get(`/artwalks/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/artwalks\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/artwalks/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/artwalks/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(\"/artwalks\");\n  }\n\n  findByTitle(title) {\n    return http.get(`/artwalks?title=${title}`);\n  }\n}\n\nexport default new ArtWalkDataService();"]},"metadata":{},"sourceType":"module"}