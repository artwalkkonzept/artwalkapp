{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/download_mmd_prfrankild.dk/Ex_Files_React_Authentication/Exercise Files/Exercise Files Updated Jun 23 2021/CH01/01_15/End/client/src/pages/UserInfoPage.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserInfoPage = () => {\n  _s();\n\n  const user = useUser();\n  const [token, setToken] = useToken();\n  const {\n    id,\n    email,\n    info\n  } = user; // We'll use the history to navigate the user\n  // programmatically later on (we're not using it yet)\n\n  const history = useHistory(); // These states are bound to the values of the text inputs\n  // on the page (see JSX below). \n\n  const [favoriteFood, setFavoriteFood] = useState(info.favoriteFood || '');\n  const [hairColor, setHairColor] = useState(info.hairColor || '');\n  const [bio, setBio] = useState(info.bio || ''); // These state variables control whether or not we show\n  // the success and error message sections after making\n  // a network request (see JSX below).\n\n  const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n  const [showErrorMessage, setShowErrorMessage] = useState(false); // This useEffect hook automatically hides the\n  // success and error messages after 3 seconds when they're shown.\n  // Just a little user interface improvement.\n\n  useEffect(() => {\n    if (showSuccessMessage || showErrorMessage) {\n      setTimeout(() => {\n        setShowSuccessMessage(false);\n        setShowErrorMessage(false);\n      }, 3000);\n    }\n  }, [showSuccessMessage, showErrorMessage]);\n\n  const saveChanges = async () => {\n    try {\n      const response = await axios.put(`/api/users/${id}`, {\n        favoriteFood,\n        hairColor,\n        bio\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const {\n        token: newToken\n      } = response.data;\n      setToken(newToken);\n      setShowSuccessMessage(true);\n    } catch (error) {\n      setShowErrorMessage(true);\n    }\n  };\n\n  const logOut = () => {\n    localStorage.removeItem(\"token\");\n    history.push(\"./login\");\n  };\n\n  const resetValues = () => {\n    setFavoriteFood(info.favoriteFood);\n    setHairColor(info.hairColor);\n    setBio(info.bio);\n  }; // And here we have the JSX for our component. It's pretty straightforward\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), !isVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fail\",\n      children: \"You won't be able to make any changes until you verify your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }, this), showSuccessMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success\",\n      children: \"Successfully saved user data!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 36\n    }, this), showErrorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fail\",\n      children: \"Uh oh... something went wrong and we couldn't save changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create an ArtWalk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"ArtWalk title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setName(e.target.value),\n        value: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Bild:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => setBilds(e.target.value),\n        value: bilds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttom\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetValues,\n          children: \"Reset Values\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveChanges,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: logOut,\n          children: \"Log Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UserInfoPage, \"LzssFdfE7/UB6Y+YOiHsn4VZrMc=\", false, function () {\n  return [useUser, useToken, useHistory];\n});\n\n_c = UserInfoPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserInfoPage\");","map":{"version":3,"sources":["/Users/admin/Desktop/download_mmd_prfrankild.dk/Ex_Files_React_Authentication/Exercise Files/Exercise Files Updated Jun 23 2021/CH01/01_15/End/client/src/pages/UserInfoPage.js"],"names":["useState","useEffect","useHistory","axios","useToken","useUser","UserInfoPage","user","token","setToken","id","email","info","history","favoriteFood","setFavoriteFood","hairColor","setHairColor","bio","setBio","showSuccessMessage","setShowSuccessMessage","showErrorMessage","setShowErrorMessage","setTimeout","saveChanges","response","put","headers","Authorization","newToken","data","error","logOut","localStorage","removeItem","push","resetValues","isVerified","e","setName","target","value","name","setBilds","bilds"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAC9B,QAAMC,IAAI,GAAGF,OAAO,EAApB;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AAEA,QAAM;AAAEM,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaC,IAAAA;AAAb,MAAsBL,IAA5B,CAJ8B,CAM9B;AACA;;AACA,QAAMM,OAAO,GAAGX,UAAU,EAA1B,CAR8B,CAU9B;AACA;;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAACY,IAAI,CAACE,YAAL,IAAqB,EAAtB,CAAhD;AACA,QAAM,CAACE,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAACY,IAAI,CAACI,SAAL,IAAkB,EAAnB,CAA1C;AACA,QAAM,CAACE,GAAD,EAAMC,MAAN,IAAgBnB,QAAQ,CAACY,IAAI,CAACM,GAAL,IAAY,EAAb,CAA9B,CAd8B,CAgB9B;AACA;AACA;;AACA,QAAM,CAACE,kBAAD,EAAqBC,qBAArB,IAA8CrB,QAAQ,CAAC,KAAD,CAA5D;AACA,QAAM,CAACsB,gBAAD,EAAmBC,mBAAnB,IAA0CvB,QAAQ,CAAC,KAAD,CAAxD,CApB8B,CAsB9B;AACA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAImB,kBAAkB,IAAIE,gBAA1B,EAA4C;AACxCE,MAAAA,UAAU,CAAC,MAAM;AACbH,QAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAE,QAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACH,OAHS,EAGP,IAHO,CAAV;AAIH;AACJ,GAPQ,EAON,CAACH,kBAAD,EAAqBE,gBAArB,CAPM,CAAT;;AASA,QAAMG,WAAW,GAAG,YAAY;AAC5B,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAW,cAAajB,EAAG,EAA3B,EAA8B;AACjDI,QAAAA,YADiD;AAEjDE,QAAAA,SAFiD;AAGjDE,QAAAA;AAHiD,OAA9B,EAIpB;AACCU,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAG,UAASrB,KAAM;AAAjC;AADV,OAJoB,CAAvB;AAQA,YAAM;AAAEA,QAAAA,KAAK,EAAEsB;AAAT,UAAsBJ,QAAQ,CAACK,IAArC;AACAtB,MAAAA,QAAQ,CAACqB,QAAD,CAAR;AACAT,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACH,KAZD,CAYE,OAAOW,KAAP,EAAc;AACZT,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;AACJ,GAhBD;;AAkBA,QAAMU,MAAM,GAAG,MAAM;AACrBC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAtB,IAAAA,OAAO,CAACuB,IAAR,CAAa,SAAb;AACC,GAHD;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACtBtB,IAAAA,eAAe,CAACH,IAAI,CAACE,YAAN,CAAf;AACAG,IAAAA,YAAY,CAACL,IAAI,CAACI,SAAN,CAAZ;AACAG,IAAAA,MAAM,CAACP,IAAI,CAACM,GAAN,CAAN;AACH,GAJD,CAzD8B,CA+D9B;;;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,4BACI;AAAA,sBAAMP,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAAC2B,UAAD,iBAAe;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFpB,EAGKlB,kBAAkB,iBAAI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAH3B,EAIKE,gBAAgB,iBAAI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJzB,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,QAAQ,EAAEiB,CAAC,IAAIC,OAAO,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAD1B;AAEI,QAAA,KAAK,EAAEC;AAFX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YANJ,eAYI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,QAAQ,EAAEJ,CAAC,IAAIK,QAAQ,CAACL,CAAC,CAACE,MAAF,CAASC,KAAV,CAD3B;AAEI,QAAA,KAAK,EAAEG;AAFX;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAkBQ;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,8BACJ;AAAA,+BAAI;AAAQ,UAAA,OAAO,EAAER,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAA,+BAAI;AAAQ,UAAA,OAAO,EAAEZ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ;AAAA;AAAA;AAAA;AAAA,cAHI,eAIJ;AAAA,+BAAI;AAAQ,UAAA,OAAO,EAAEQ,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cAJI;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH,CA3FM;;GAAM3B,Y;UACID,O,EACaD,Q,EAMVF,U;;;KARPI,Y","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { useToken } from '../auth/useToken';\nimport { useUser } from '../auth/useUser';\n\nexport const UserInfoPage = () => {\n    const user = useUser();\n    const [token, setToken] = useToken();\n\n    const { id, email, info } = user;\n\n    // We'll use the history to navigate the user\n    // programmatically later on (we're not using it yet)\n    const history = useHistory();\n\n    // These states are bound to the values of the text inputs\n    // on the page (see JSX below). \n    const [favoriteFood, setFavoriteFood] = useState(info.favoriteFood || '');\n    const [hairColor, setHairColor] = useState(info.hairColor || '');\n    const [bio, setBio] = useState(info.bio || '');\n\n    // These state variables control whether or not we show\n    // the success and error message sections after making\n    // a network request (see JSX below).\n    const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n    const [showErrorMessage, setShowErrorMessage] = useState(false);\n\n    // This useEffect hook automatically hides the\n    // success and error messages after 3 seconds when they're shown.\n    // Just a little user interface improvement.\n    useEffect(() => {\n        if (showSuccessMessage || showErrorMessage) {\n            setTimeout(() => {\n                setShowSuccessMessage(false);\n                setShowErrorMessage(false);\n            }, 3000);\n        }\n    }, [showSuccessMessage, showErrorMessage]);\n\n    const saveChanges = async () => {\n        try {\n            const response = await axios.put(`/api/users/${id}`, {\n                favoriteFood,\n                hairColor,\n                bio,\n            }, {\n                headers: { Authorization: `Bearer ${token}` }\n            });\n\n            const { token: newToken } = response.data;\n            setToken(newToken);\n            setShowSuccessMessage(true);\n        } catch (error) {\n            setShowErrorMessage(true);\n        }\n    }\n\n    const logOut = () => {\n    localStorage.removeItem(\"token\");\n    history.push(\"./login\");\n    }\n    \n    const resetValues = () => {\n        setFavoriteFood(info.favoriteFood);\n        setHairColor(info.hairColor);\n        setBio(info.bio);\n    }\n    \n    // And here we have the JSX for our component. It's pretty straightforward\n    return (\n        <div className=\"content-container\">\n            <h1> {email}</h1>\n            {!isVerified && <div className=\"fail\">You won't be able to make any changes until you verify your email</div>}\n            {showSuccessMessage && <div className=\"success\">Successfully saved user data!</div>}\n            {showErrorMessage && <div className=\"fail\">Uh oh... something went wrong and we couldn't save changes</div>}\n            <h3>Create an ArtWalk</h3>\n            <label>\n                <p>ArtWalk title:</p>\n                <input\n                    onChange={e => setName(e.target.value)}\n                    value={name} />\n            </label>\n            <label>\n                <p>Bild:</p>\n                <input\n                    onChange={e => setBilds(e.target.value)}\n                    value={bilds} />\n            </label>\n                <div className=\"buttom\">\n            <li><button onClick={resetValues}>Reset Values</button></li>\n            <li><button onClick={saveChanges}>Save Changes</button></li>\n            <hr />\n            <li><button onClick={logOut}>Log Out</button></li>\n            </div>\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}