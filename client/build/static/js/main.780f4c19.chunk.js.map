{"version":3,"sources":["http-common.js","services/artwalk.service.js","components/login.component.js","components/register.component.js","services/artwalk-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","components/user.component.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","components/add-artwalk.component.js","components/artwalk.component.js","components/artwalks-list.component.js","services/artwalk-published.service.js","components/artwalk-published.component.js","http-imgupload.js","services/file-upload.service.js","components/image-upload.component.js","components/image.component.js","App.js","serviceWorker.js","reportWebVitals.js","index.js"],"names":["axios","create","baseURL","headers","API_URL","login","username","password","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","logout","removeItem","register","email","getCurrentUser","parse","getItem","getAll","params","http","get","id","update","put","delete","deleteAll","findByTitle","title","required","value","className","role","Login","Component","constructor","props","super","this","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","ArtWalkDataService","history","push","window","location","reload","error","resMessage","toString","render","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","artwalkHeader","user","getPublicContent","getUserBoard","getModeratorBoard","getAdminBoard","Home","content","componentDidMount","UserService","Profile","redirect","userReady","currentUser","to","substring","substr","roles","map","index","User","BoardUser","BoardModerator","onChangeTitle","onChangeDescription","saveArtWalk","newArtWalk","description","published","submitted","console","log","catch","onClick","BoardAdmin","AddArtWalk","ArtWalk","getArtWalk","updatePublished","updateArtWalk","deleteArtWalk","currentArtWalk","match","prevState","status","ArtWalksList","onChangeSearchTitle","retrieveArtwalks","refreshList","setActiveArtWalk","removeAllArtWalks","searchTitle","handlePageChange","handlePageSizeChange","artwalks","currentIndex","page","count","pageSize","pageSizes","getRequestParams","ArtwalkDataService","totalPages","retrieveArtWalks","artwalk","event","placeholder","size","Pagination","siblingCount","boundaryCount","variant","shape","createdAt","ArtWalksPublished","ArtWalkPublishedDataService","simulateClick","upload","file","onUploadProgress","formData","FormData","append","getFiles","UploadImages","selectFiles","uploadImages","selectedFiles","undefined","previewImages","progressInfos","imageInfos","UploadService","images","i","files","URL","createObjectURL","idx","_progressInfos","percentage","Math","round","loaded","total","prev","nextMessage","fileName","multiple","accept","progressInfo","width","img","item","href","url","height","Images","formattedDate","require","moment","format","App","logOut","showModeratorBoard","showAdminBoard","includes","color","backgroundColor","padding","borderRadius","fontFamily","exact","path","component","ArtWalksPublish","ImgUpload","whoops404","Boolean","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.780f4c19.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/api\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import axios from \"axios\";\n\n\nimport http from \"../http-common\";\n\n\nconst API_URL = \"http://localhost:8080/api/artwalk/\";\n\nclass ArtWalkDataService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", {\n        username,\n        password\n      })\n      .then(response => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem('user'));;\n  }\n//}\n\n//export default new ArtwalkService();\n\n//class ArtWalkDataService {\n  getAll(params) {\n    return http.get(\"/artwalks\", { params });\n  }\n\n  get(id) {\n    return http.get(`/artwalks/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/artwalks\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/artwalks/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/artwalks/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(\"/artwalks\");\n  }\n\n  findByTitle(title) {\n    return http.get(`/artwalks?title=${title}`);\n  }\n}\n\nexport default new ArtWalkDataService();","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport ArtWalkDataService from \"../services/artwalk.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      loading: true\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      ArtWalkDataService.login(this.state.username, this.state.password).then(\n        () => {\n          this.props.history.push(\"/profile\");\n          window.location.reload();\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            loading: false,\n            message: resMessage\n          });\n        }\n      );\n    } else {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport ArtWalkDataService from \"../services/artwalk.service\";\n\nconst required = value => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = value => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = value => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = value => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n      message: \"\"\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      message: \"\",\n      successful: false\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      ArtWalkDataService.register(\n        this.state.username,\n        this.state.email,\n        this.state.password\n      ).then(\n        response => {\n          this.setState({\n            message: response.data.message,\n            successful: true\n          });\n        },\n        error => {\n          const resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n\n          this.setState({\n            successful: false,\n            message: resMessage\n          });\n        }\n      );\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={c => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {this.state.message && (\n              <div className=\"form-group\">\n                <div\n                  className={\n                    this.state.successful\n                      ? \"alert alert-success\"\n                      : \"alert alert-danger\"\n                  }\n                  role=\"alert\"\n                >\n                  {this.state.message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={c => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n","export default function artwalkHeader() {\n  const user = JSON.parse(localStorage.getItem('user'));\n\n  if (user && user.accessToken) {\n    // return { Artwalkorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\n  } else {\n    return {};\n  }\n}\n","import axios from 'axios';\nimport artwalkHeader from './artwalk-header';\n\nconst API_URL = 'http://localhost:8080/api/test/';\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + 'all');\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + 'user', { headers: artwalkHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + 'mod', { headers: artwalkHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + 'admin', { headers: artwalkHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ArtWalkDataService from \"../services/artwalk.service\";\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = ArtWalkDataService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div>\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong>{\" \"}\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong>{\" \"}\n          {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong>{\" \"}\n          {currentUser.email}\n        </p>\n        <strong>Artwalkorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport ArtWalkDataService from \"../services/artwalk.service\";\n\nexport default class User extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: null,\n      userReady: false,\n      currentUser: { username: \"\" }\n    };\n  }\n\n  componentDidMount() {\n    const currentUser = ArtWalkDataService.getCurrentUser();\n\n    if (!currentUser) this.setState({ redirect: \"/home\" });\n    this.setState({ currentUser: currentUser, userReady: true })\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to={this.state.redirect} />\n    }\n\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"container\">\n        {(this.state.userReady) ?\n        <div>\n        <header className=\"jumbotron\">\n          <h3>The <strong>login user page</strong> of all users.</h3>\n          <p><strong>The current user is </strong>\n          { currentUser.username}\n        </p>\n        </header>\n      </div>: null}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport ArtWalkDataService from \"../services/artwalk.service\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveArtWalk = this.saveArtWalk.bind(this);\n    this.newArtWalk = this.newArtWalk.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\", \n      published: false,\n      submitted: false,\n\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveArtWalk() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description\n    };\n\n    ArtWalkDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newArtWalk() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n\n  render() {\n    return (\n          <div className=\"submit-form\">\n          <h3>{this.state.content}</h3>\n        \n      {this.state.submitted ? (\n        <div>\n          <p>You submitted successfully!</p>\n          <button className=\"btn btn-success\" onClick={this.newArtWalk}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={this.state.title}\n              onChange={this.onChangeTitle}\n              name=\"title\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              name=\"description\"\n            />\n          </div>\n\n          <button onClick={this.saveArtWalk} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../services/user.service\";\nimport ArtWalkDataService from \"../services/artwalk.service\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveArtWalk = this.saveArtWalk.bind(this);\n    this.newArtWalk = this.newArtWalk.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\", \n      published: false,\n      submitted: false,\n\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveArtWalk() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description\n    };\n\n    ArtWalkDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newArtWalk() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n          <h3>{this.state.content}</h3>\n        \n      {this.state.submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={this.newArtWalk}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Title</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"title\"\n              required\n              value={this.state.title}\n              onChange={this.onChangeTitle}\n              name=\"title\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Description</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"description\"\n              required\n              value={this.state.description}\n              onChange={this.onChangeDescription}\n              name=\"description\"\n            />\n          </div>\n\n          <button onClick={this.saveArtWalk} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n    );\n  }\n}","import React, { Component } from \"react\";\nimport ArtWalkDataService from \"../services/artwalk.service\";\n\nexport default class AddArtWalk extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.saveArtWalk = this.saveArtWalk.bind(this);\n    this.newArtWalk = this.newArtWalk.bind(this);\n\n    this.state = {\n      id: null,\n      title: \"\",\n      description: \"\", \n      published: false,\n\n      submitted: false\n    };\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  saveArtWalk() {\n    var data = {\n      title: this.state.title,\n      description: this.state.description\n    };\n\n    ArtWalkDataService.create(data)\n      .then(response => {\n        this.setState({\n          id: response.data.id,\n          title: response.data.title,\n          description: response.data.description,\n          published: response.data.published,\n\n          submitted: true\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  newArtWalk() {\n    this.setState({\n      id: null,\n      title: \"\",\n      description: \"\",\n      published: false,\n\n      submitted: false\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"submit-form\">\n        {this.state.submitted ? (\n          <div>\n            <p>You submitted successfully!</p>\n            <button className=\"btn btn-success\" onClick={this.newArtWalk}>\n              Add\n            </button>\n          </div>\n        ) : (\n          <div>\n            <div className=\"form-group\">\n              <label htmlFor=\"title\">Title</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"title\"\n                required\n                value={this.state.title}\n                onChange={this.onChangeTitle}\n                name=\"title\"\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                name=\"description\"\n              />\n            </div>\n\n            <button onClick={this.saveArtWalk} className=\"btn btn-success\">\n              Submit\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ArtWalkDataService from \"../services/artwalk.service\";\n\nexport default class ArtWalk extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getArtWalk = this.getArtWalk.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateArtWalk = this.updateArtWalk.bind(this);\n    this.deleteArtWalk = this.deleteArtWalk.bind(this);\n\n    this.state = {\n      currentArtWalk: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getArtWalk(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n\n    this.setState(function(prevState) {\n      return {\n        currentArtWalk: {\n          ...prevState.currentArtWalk,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    \n    this.setState(prevState => ({\n      currentArtWalk: {\n        ...prevState.currentArtWalk,\n        description: description\n      }\n    }));\n  }\n\n  getArtWalk(id) {\n    ArtWalkDataService.get(id)\n      .then(response => {\n        this.setState({\n          currentArtWalk: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentArtWalk.id,\n      title: this.state.currentArtWalk.title,\n      description: this.state.currentArtWalk.description,\n      published: status\n    };\n\n    ArtWalkDataService.update(this.state.currentArtWalk.id, data)\n      .then(response => {\n        this.setState(prevState => ({\n          currentArtWalk: {\n            ...prevState.currentArtWalk,\n            published: status\n          }\n        }));\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  updateArtWalk() {\n    ArtWalkDataService.update(\n      this.state.currentArtWalk.id,\n      this.state.currentArtWalk\n    )\n      .then(response => {\n        console.log(response.data);\n        this.setState({\n          message: \"The artwalk was updated successfully!\"\n        });\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  deleteArtWalk() {    \n    ArtWalkDataService.delete(this.state.currentArtWalk.id)\n      .then(response => {\n        console.log(response.data);\n        this.props.history.push('/artwalks')\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { currentArtWalk } = this.state;\n\n    return (\n      <div>\n        {currentArtWalk ? (\n          <div className=\"edit-form\">\n            <h4>ArtWalk</h4>\n            <form>\n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Title</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"title\"\n                  value={currentArtWalk.title}\n                  onChange={this.onChangeTitle}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"description\">Description</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentArtWalk.description}\n                  onChange={this.onChangeDescription}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label>\n                  <strong>Status:</strong>\n                </label>\n                {currentArtWalk.published ? \"Published\" : \"Pending\"}\n              </div>\n            </form>\n\n            {currentArtWalk.published ? (\n              <button\n                className=\"btn btn-primary mr-2\"\n                onClick={() => this.updatePublished(false)}\n              >\n                UnPublish\n              </button>\n            ) : (\n              <button\n                className=\"btn btn-primary mr-2\"\n                onClick={() => this.updatePublished(true)}\n              >\n                Publish\n              </button>\n            )}\n\n            <button\n              className=\"btn btn-danger mr-2\"\n              onClick={this.deleteArtWalk}\n            >\n              Delete\n            </button >\n\n            <button\n              type=\"submit\"\n              className=\"btn btn-success\"\n              onClick={this.updateArtWalk}\n            >\n              Update\n            </button>\n            <p>{this.state.message}</p>\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a ArtWalk news post</p>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport ArtwalkDataService from \"../services/artwalk.service\";\nimport { Link } from \"react-router-dom\";\n\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nexport default class ArtWalksList extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveArtwalks = this.retrieveArtwalks.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveArtWalk = this.setActiveArtWalk.bind(this);\n    this.removeAllArtWalks = this.removeAllArtWalks.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\n\n    this.state = {\n      artwalks: [],\n      currentArtWalk: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n\n      page: 1,\n      count: 0,\n      pageSize: 1,\n    };\n\n    this.pageSizes = [1, 6, 9];\n  }\n\n  componentDidMount() {\n    this.retrieveArtwalks();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n  getRequestParams(searchTitle, page, pageSize) {\n    let params = {};\n\n    if (searchTitle) {\n      params[\"title\"] = searchTitle;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    return params;\n  }\n\n retrieveArtwalks() {\n    const { searchTitle, page, pageSize } = this.state;\n    const params = this.getRequestParams(searchTitle, page, pageSize);\n\n    ArtwalkDataService.getAll(params)\n      .then((response) => {\n        const { artwalks, totalPages } = response.data;\n\n        this.setState({\n          artwalks: artwalks,\n          count: totalPages,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveArtWalks();\n    this.setState({\n      currentArtWalk: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveArtWalk(artwalk, index) {\n    this.setState({\n      currentArtWalk: artwalk,\n      currentIndex: index\n    });\n  }\n\n  removeAllArtWalks() {\n    ArtwalkDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  handlePageChange(event, value) {\n    this.setState(\n      {\n        page: value,\n      },\n      () => {\n        this.retrieveArtwalks();\n      }\n    );\n  }\n\n  handlePageSizeChange(event) {\n    this.setState(\n      {\n        pageSize: event.target.value,\n        page: 1\n      },\n      () => {\n        this.retrieveArtwalks();\n      }\n    );\n  }\n\n  searchTitle() {\n    this.setState({\n      currentArtWalk: null,\n      currentIndex: -1\n    });\n\n    ArtwalkDataService.findByTitle(this.state.searchTitle)\n      .then(response => {\n        this.setState({\n          artwalks: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchTitle, artwalks, currentArtWalk, currentIndex, page, count, pageSize, } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              value={searchTitle}\n              onChange={this.onChangeSearchTitle}\n            />\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.retrieveArtwalks}\n              >\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>ArtWalk post list</h4>\n\n          <div className=\"mt-3\">\n            {\"Items per Page: \"}\n            <select onChange={this.handlePageSizeChange} value={pageSize}>\n              {this.pageSizes.map((size) => (\n                <option key={size} value={size}>\n                  {size}\n                </option>\n              ))}\n            </select>\n            \n            <Pagination\n              className=\"my-3\"\n              count={count}\n              page={page}\n              siblingCount={1}\n              boundaryCount={1}\n              variant=\"outlined\"\n              shape=\"rounded\"\n              onChange={this.handlePageChange}\n            />\n          </div>\n\n          <ul className=\"list-group\">\n              {artwalks && artwalks.map((artwalk, index) => (\n                <li\n                  className={\n                    \"list-group-item \" +\n                    (index === currentIndex ? \"active\" : \"\")\n                  }\n                  onClick={() => this.setActiveArtWalk(artwalk, index)}\n                  key={index}>\n                  {artwalk.title}\n                  \n                  <h4>{artwalk.title}</h4>\n                  <p>{artwalk.createdAt}</p>\n                </li>\n              ))}\n          </ul>\n\n          <button\n            className=\"m-3 btn btn-danger\"\n            onClick={this.removeAllArtWalks}\n          >\n            Remove All\n          </button>\n        </div>\n        <div className=\"col-md-6\">\n          {currentArtWalk ? (\n            <div>\n              <h4>ArtWalk</h4>\n              <div>\n                <label>\n                  <strong>Title:</strong>\n                </label>{\" \"}\n                {currentArtWalk.title}\n              </div><div>\n                <label>\n                  <strong>Moment:</strong>\n                </label>{\" \"}\n                {currentArtWalk.createdAt}\n              </div>\n              <div>\n                <label>\n                  <strong>Description:</strong>\n                </label>{\" \"}\n                {currentArtWalk.description}\n              </div>\n              <div>\n                <label>\n                  <strong>Status:</strong>\n                </label>{\" \"}\n                {currentArtWalk.published ? \"Published\" : \"Pending\"}\n              </div>\n\n              <Link\n                to={\"/artwalks/\" + currentArtWalk.id}\n                className=\"btn btn-warning\"\n              >\n                Edit\n              </Link>\n            </div>\n          ) : (\n            <div>\n              <br />\n              <p>Please click on an ArtWalk news post</p>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n","import http from \"../http-common\";\n\nclass ArtWalkPublishedDataService {\n\n  getAll() {\n    return http.get(\"/artwalks/published\");\n  }\n\n  get(id) {\n    return http.get(`/artwalks/published/${id}`);\n  }\n\n  create(data) {\n    return http.post(\"/artwalks/published\", data);\n  }\n\n  update(id, data) {\n    return http.put(`/artwalks/published/${id}`, data);\n  }\n\n  delete(id) {\n    return http.delete(`/artwalks/published/${id}`);\n  }\n\n  deleteAll() {\n    return http.delete(`/artwalks/published`);\n  }\n\n  findByTitle(title) {\n    return http.get(`/artwalks/published?title=${title}`);\n  }\n}\n\nexport default new ArtWalkPublishedDataService();","import React, { Component } from \"react\";\nimport ArtWalkPublishedDataService from \"../services/artwalk-published.service\";\n//import { Link } from \"react-router-dom\";\n\n\n//import Pagination from \"@material-ui/lab/Pagination\";\n\nexport default class ArtWalksPublished extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeSearchTitle = this.onChangeSearchTitle.bind(this);\n    this.retrieveArtwalks = this.retrieveArtwalks.bind(this);\n    this.refreshList = this.refreshList.bind(this);\n    this.setActiveArtWalk = this.setActiveArtWalk.bind(this);\n    this.removeAllArtWalks = this.removeAllArtWalks.bind(this);\n    this.searchTitle = this.searchTitle.bind(this);\n    this.handlePageChange = this.handlePageChange.bind(this);\n    this.handlePageSizeChange = this.handlePageSizeChange.bind(this);\n\n    this.state = {\n      artwalks: [],\n      currentArtWalk: null,\n      currentIndex: -1,\n      searchTitle: \"\",\n\n      page: 1,\n      count: 0,\n      pageSize: 1,\n    };\n\n    this.pageSizes = [1, 6, 9];\n  }\n\n  componentDidMount() {\n    this.retrieveArtwalks();\n  }\n\n  onChangeSearchTitle(e) {\n    const searchTitle = e.target.value;\n\n    this.setState({\n      searchTitle: searchTitle\n    });\n  }\n\n\n  getRequestParams(searchTitle, page, pageSize) {\n    let params = {};\n\n    if (searchTitle) {\n      params[\"title\"] = searchTitle;\n    }\n\n    if (page) {\n      params[\"page\"] = page - 1;\n    }\n\n    if (pageSize) {\n      params[\"size\"] = pageSize;\n    }\n\n    return params;\n  }\n\n retrieveArtwalks() {\n    const { searchTitle, page, pageSize } = this.state;\n    const params = this.getRequestParams(searchTitle, page, pageSize);\n\n    ArtWalkPublishedDataService.getAll(params)\n      .then((response) => {\n        const { artwalks, totalPages } = response.data;\n\n        this.setState({\n          artwalks: artwalks,\n          count: totalPages,\n        });\n        console.log(response.data);\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  refreshList() {\n    this.retrieveArtWalks();\n    this.setState({\n      currentArtWalk: null,\n      currentIndex: -1\n    });\n  }\n\n  setActiveArtWalk(artwalk, index) {\n    this.setState({\n      currentArtWalk: artwalk,\n      currentIndex: index\n    });\n  }\n\n  removeAllArtWalks() {\n    ArtWalkPublishedDataService.deleteAll()\n      .then(response => {\n        console.log(response.data);\n        this.refreshList();\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  }\n\n  handlePageChange(event, value) {\n    this.setState(\n      {\n        page: value,\n      },\n      () => {\n        this.retrieveArtwalks();\n      }\n    );\n  }\n\n  handlePageSizeChange(event) {\n    this.setState(\n      {\n        pageSize: event.target.value,\n        page: 1\n      },\n      () => {\n        this.retrieveArtwalks();\n      }\n    );\n  }\n\n  searchTitle() {\n    this.setState({\n      currentArtWalk: null,\n      currentIndex: -1\n    });\n\n    ArtWalkPublishedDataService.findByTitle(this.state.searchTitle)\n      .then(response => {\n        this.setState({\n          artwalks: response.data\n        });\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  }\n\n  render() {\n    const { searchTitle, artwalks, currentArtWalk, currentIndex, } = this.state;\n\n    return (\n      <div className=\"list row\">\n        <div className=\"col-md-8\">\n          <div className=\"input-group mb-3\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder=\"Search by title\"\n              value={searchTitle}\n              onChange={this.onChangeSearchTitle}/>\n            <div className=\"input-group-append\">\n              <button\n                className=\"btn btn-outline-secondary\"\n                type=\"button\"\n                onClick={this.retrieveArtwalks}>\n                Search\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6\">\n          <h4>ArtWalk post</h4>\n\n          <ul className=\"list-group\">\n            {artwalks && artwalks.map((artwalk, index) => (\n              <li\n                className={\n                  \"list-group-item \" +\n                  (index === currentIndex ? \"active\" : \"\")\n                }\n                ref={this.simulateClick}\n                onClick={() => this.setActiveArtWalk(artwalk, index)}\n                key={index}>\n                <h4>{artwalk.title}</h4>\n              </li>\n            ))}\n          </ul>\n         \n        </div>\n        <div className=\"col-md-6\">\n          {currentArtWalk ? (\n            <div>\n              <h4>ArtWalk</h4>\n              <div>\n                <label>\n                  <strong>Title:</strong>\n                </label>{\" \"}\n                {currentArtWalk.title}\n              </div>\n              <div>\n                <label>\n                  <strong>Description:</strong>\n                </label>{\" \"}\n                {currentArtWalk.description}\n              </div>\n            \n            </div>\n          ) : (\n            <div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\n/* <div>\n                <label>\n                  <strong>Status:</strong>\n                </label>{\" \"}\n                {currentArtWalk.published ? \"Published\" : \"Pending\"}\n              </div>\n\n              <Link\n                to={\"/artwalks/\" + currentArtWalk.id}\n                className=\"btn btn-warning\"\n              >\n                Edit\n              </Link>\n              \n              \n               <button\n            className=\"m-3 btn btn-danger\"\n            onClick={this.removeAllArtWalks}\n          >\n            //Remove All\n          </button>\n          \n          \n           <div className=\"mt-3\">\n            {\"Items per Page: \"}\n            <select onChange={this.handlePageSizeChange} value={pageSize}>\n              {this.pageSizes.map((size) => (\n                <option key={size} value={size}>\n                  {size}\n                </option>\n              ))}\n            </select>\n            \n            <Pagination\n              className=\"my-3\"\n              count={count}\n              page={page}\n              siblingCount={1}\n              boundaryCount={1}\n              variant=\"outlined\"\n              shape=\"rounded\"\n              onChange={this.handlePageChange}\n            />\n          </div>*/","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"http://localhost:8080/\",\n  headers: {\n    \"Content-type\": \"application/json\"\n  }\n});","import http from \"../http-imgupload\";\n\nclass FileUploadService {\n  upload(file, onUploadProgress) {\n    let formData = new FormData();\n\n    formData.append(\"file\", file);\n\n    return http.post(\"/upload\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress,\n    });\n  }\n\n  getFiles() {\n    return http.get(\"/files\");\n  }\n}\n\nexport default new FileUploadService();","import React, { Component } from \"react\";\nimport UploadService from \"../services/file-upload.service\";\n\nexport default class UploadImages extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFiles = this.selectFiles.bind(this);\n    this.upload = this.upload.bind(this);\n    this.uploadImages = this.uploadImages.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      previewImages: [],\n      progressInfos: [],\n      message: [],\n\n      imageInfos: [],\n    };\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then((response) => {\n      this.setState({\n        imageInfos: response.data,\n      });\n    });\n  }\n\n  selectFiles(event) {\n    let images = [];\n\n    for (let i = 0; i < event.target.files.length; i++) {\n      images.push(URL.createObjectURL(event.target.files[i]))\n    }\n\n    this.setState({\n      progressInfos: [],\n      message: [],\n      selectedFiles: event.target.files,\n      previewImages: images\n    });\n  }\n\n  upload(idx, file) {\n    let _progressInfos = [...this.state.progressInfos];\n\n    UploadService.upload(file, (event) => {\n      _progressInfos[idx].percentage = Math.round((100 * event.loaded) / event.total);\n      this.setState({\n        progressInfos: _progressInfos,\n      });\n    })\n      .then(() => {\n        this.setState((prev) => {\n          let nextMessage = [...prev.message, \"Uploaded the image successfully: \" + file.name];\n          return {\n            message: nextMessage\n          };\n        });\n\n        return UploadService.getFiles();\n      })\n      .then((files) => {\n        this.setState({\n          imageInfos: files.data,\n        });\n      })\n      .catch(() => {\n        _progressInfos[idx].percentage = 0;\n        this.setState((prev) => {\n          let nextMessage = [...prev.message, \"Could not upload the image: \" + file.name];\n          return {\n            progressInfos: _progressInfos,\n            message: nextMessage\n          };\n        });\n      });\n  }\n\n  uploadImages() {\n    const selectedFiles = this.state.selectedFiles;\n\n    let _progressInfos = [];\n\n    for (let i = 0; i < selectedFiles.length; i++) {\n      _progressInfos.push({ percentage: 0, fileName: selectedFiles[i].name });\n    }\n\n    this.setState(\n      {\n        progressInfos: _progressInfos,\n        message: [],\n      },\n      () => {\n        for (let i = 0; i < selectedFiles.length; i++) {\n          this.upload(i, selectedFiles[i]);\n        }\n      }\n    );\n  }\n\n  render() {\n    const { selectedFiles, previewImages, progressInfos, message, imageInfos } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            <label className=\"btn btn-default p-0\">\n              <input type=\"file\" multiple accept=\"image/*\" onChange={this.selectFiles} />\n            </label>\n          </div>\n\n          <div className=\"col-4\">\n            <button\n              className=\"btn btn-success btn-sm\"\n              disabled={!selectedFiles}\n              onClick={this.uploadImages}\n            >\n              Upload\n            </button>\n          </div>\n        </div>\n\n        {progressInfos &&\n          progressInfos.map((progressInfo, index) => (\n            <div className=\"mb-2\" key={index}>\n              <span>{progressInfo.fileName}</span>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar progress-bar-info\"\n                  role=\"progressbar\"\n                  aria-valuenow={progressInfo.percentage}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                  style={{ width: progressInfo.percentage + \"%\" }}\n                >\n                  {progressInfo.percentage}%\n                </div>\n              </div>\n            </div>\n          ))}\n\n        {previewImages && (\n          <div>\n            {previewImages.map((img, i) => {\n              return <img className=\"preview\" src={img} alt={\"image-\" + i}  key={i}/>;\n            })}\n          </div>\n        )}\n\n        {message.length > 0 && (\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\n            <ul>\n              {message.map((item, i) => {\n                return <li key={i}>{item}</li>;\n              })}\n            </ul>\n          </div>\n        )}\n\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">List of Files</div>\n          <ul className=\"list-group list-group-flush\">\n            {imageInfos &&\n              imageInfos.map((img, index) => (\n                <li className=\"list-group-item\" key={index}>\n                  <p><a href={img.url}>{img.name}</a></p>\n                  <img src={img.url} alt={img.name} height=\"80px\" />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport UploadService from \"../services/file-upload.service\";\n\nexport default class Images extends Component {\n  constructor(props) {\n    super(props);\n    this.selectFiles = this.selectFiles.bind(this);\n    this.upload = this.upload.bind(this);\n    this.Images = this.Images.bind(this);\n\n    this.state = {\n      selectedFiles: undefined,\n      previewImages: [],\n      progressInfos: [],\n      message: [],\n\n      imageInfos: [],\n    };\n  }\n\n  componentDidMount() {\n    UploadService.getFiles().then((response) => {\n      this.setState({\n        imageInfos: response.data,\n      });\n    });\n  }\n\n  selectFiles(event) {\n    let images = [];\n\n    for (let i = 0; i < event.target.files.length; i++) {\n      images.push(URL.createObjectURL(event.target.files[i]))\n    }\n\n    this.setState({\n      progressInfos: [],\n      message: [],\n      selectedFiles: event.target.files,\n      previewImages: images\n    });\n  }\n\n  upload(idx, file) {\n    let _progressInfos = [...this.state.progressInfos];\n\n    UploadService.upload(file, (event) => {\n      _progressInfos[idx].percentage = Math.round((100 * event.loaded) / event.total);\n      this.setState({\n        progressInfos: _progressInfos,\n      });\n    })\n      .then(() => {\n        this.setState((prev) => {\n          let nextMessage = [...prev.message, \"Uploaded the image successfully: \" + file.name];\n          return {\n            message: nextMessage\n          };\n        });\n\n        return UploadService.getFiles();\n      })\n      .then((files) => {\n        this.setState({\n          imageInfos: files.data,\n        });\n      })\n      .catch(() => {\n        _progressInfos[idx].percentage = 0;\n        this.setState((prev) => {\n          let nextMessage = [...prev.message, \"Could not upload the image: \" + file.name];\n          return {\n            progressInfos: _progressInfos,\n            message: nextMessage\n          };\n        });\n      });\n  }\n\n  Images() {\n    const selectedFiles = this.state.selectedFiles;\n\n    let _progressInfos = [];\n\n    for (let i = 0; i < selectedFiles.length; i++) {\n      _progressInfos.push({ percentage: 0, fileName: selectedFiles[i].name });\n    }\n\n    this.setState(\n      {\n        progressInfos: _progressInfos,\n        message: [],\n      },\n      () => {\n        for (let i = 0; i < selectedFiles.length; i++) {\n          this.upload(i, selectedFiles[i]);\n        }\n      }\n    );\n  }\n\n  render() {\n    const { previewImages, progressInfos, message, imageInfos } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-8\">\n            \n\n          </div>\n\n         \n        </div>\n\n        {progressInfos &&\n          progressInfos.map((progressInfo, index) => (\n            <div className=\"mb-2\" key={index}>\n              <span>{progressInfo.fileName}</span>\n              <div className=\"progress\">\n                <div\n                  className=\"progress-bar progress-bar-info\"\n                  role=\"progressbar\"\n                  aria-valuenow={progressInfo.percentage}\n                  aria-valuemin=\"0\"\n                  aria-valuemax=\"100\"\n                  style={{ width: progressInfo.percentage + \"%\" }}\n                >\n                  {progressInfo.percentage}%\n                </div>\n              </div>\n            </div>\n          ))}\n\n        {previewImages && (\n          <div>\n            {previewImages.map((img, i) => {\n              return <img className=\"preview\" src={img} alt={\"image-\" + i}  key={i}/>;\n            })}\n          </div>\n        )}\n\n        {message.length > 0 && (\n          <div className=\"alert alert-secondary mt-2\" role=\"alert\">\n            <ul>\n              {message.map((item, i) => {\n                return <li key={i}>{item}</li>;\n              })}\n            </ul>\n          </div>\n        )}\n\n        <div className=\"card mt-3\">\n          <div className=\"card-header\">List of Files</div>\n          <ul className=\"list-group list-group-flush\">\n            {imageInfos &&\n              imageInfos.map((img, index) => (\n                <li className=\"list-group-item\" key={index}>\n                  <p><a href={img.url}>{img.name}</a></p>\n                  <img src={img.url} alt={img.name} height=\"80px\" />\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\n/*\n<label className=\"btn btn-default p-0\">\n              <input type=\"file\" multiple accept=\"image/*\" onChange={this.selectFiles} />\n            </label>\n\n\n <div className=\"col-4\">\n            <button\n              className=\"btn btn-success btn-sm\"\n              disabled={!selectedFiles}\n              onClick={this.Images}\n            >\n              Upload\n            </button>\n          </div>*/","import React, { Component } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport ArtWalkDataService from \"./services/artwalk.service\";\n\nimport Login from \"./components/login.component\";\nimport Register from \"./components/register.component\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport User from \"./components/user.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardModerator from \"./components/board-moderator.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\n\n\nimport AddArtWalk from \"./components/add-artwalk.component\";\nimport ArtWalk from \"./components/artwalk.component\";\nimport ArtWalksList from \"./components/artwalks-list.component\";\nimport ArtWalksPublish from \"./components/artwalk-published.component\";\n\n\nimport ImgUpload from \"./components/image-upload.component\";\nimport Images from \"./components/image.component\";\n\n\nconst moment = require('moment'); // require\nconst formattedDate = moment().format('llll');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = ArtWalkDataService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  logOut() {\n    ArtWalkDataService.logout();\n  }\n\n  render() {\n    \n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n    const pstyle = {\n      color: \"white\",\n      backgroundColor: \"purple\",\n      padding: \"10px\",\n      borderRadius: \"2%\",\n      fontFamily: \"Arial\"\n    };\n    \n    return (\n      <div>\n        <nav className=\"navbar navbar-dark bg-dark\">\n          <div className=\"navbar-nav \">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            ArtWalk\n          </Link>\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Public page\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/mod\"} className=\"nav-link\">\n                  Moderator\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  Administrator\n                </Link>\n              </li>\n            )}\n\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  Login page\n                </Link>\n              </li>\n            )}\n\n            <li className=\"nav-item\">\n              <Link to={\"/add\"} className=\"nav-link\">\n                Add post\n              </Link>\n            </li>\n            <li className=\"nav-item\"> \n              <Link to={\"/Artwalks\"} className=\"nav-link\">\n              All post\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/artwalks/published\"} className=\"nav-link\">\n                Published post\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/ImgUpload\"} className=\"nav-link\">\n                Add Image\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to={\"/Images\"} className=\"nav-link\">\n              Images\n              </Link>\n            </li>\n          </div>\n        </nav>\n\n        <div className=\"sidebar-nav ml-auto\">\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\"> \n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n            <p style={pstyle}>{formattedDate} </p>\n          </li>\n            </div>\n          )}\n          </div>\n\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/artwalks\"]} component={ArtWalksList} />\n            <Route exact path={[\"/\", \"/ArtWalks/published\"]} component={ArtWalksPublish} />\n            <Route exact path=\"/add\" component={AddArtWalk} />\n            <Route path=\"/artwalks/:id\" component={ArtWalk} />\n            <Route exact path=\"/ImgUpload\" component={ImgUpload} />\n            <Route exact path=\"/Images\" component={Images} />\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route exact path=\"/user\" component={User} />\n            <Route path=\"/user\" component={BoardUser} />\n            <Route path=\"/mod\" component={BoardModerator} />\n            <Route path=\"/admin\" component={BoardAdmin} />\n            <Route path=\"*\" component={whoops404} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nexport function whoops404() {\n  return (\n    <div className=\"container\">\n      <h1>\n       Error 404! - This page does not exits!\n      </h1>\n    </div>\n  )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n//import ImgUpload from './ImgUpload';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( \n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister();"],"sourceRoot":""}