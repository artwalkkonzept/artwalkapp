{"ast":null,"code":"import React from 'react';\n/*let props = {\n  imageUrl:\"https://res.cloudinary.com/glide/image/fetch/f_auto,w_300,h_300,c_lfill/https%3A%2F%2Ffirebasestorage.googleapis.com%2Fv0%2Fb%2Fglide-prod.appspot.com%2Fo%2Ficon-images%252Fanonymous-e7fcf338-8a49-44d2-9fcb-afd802a823c8.png%3Falt%3Dmedia%26token%3D161e099a-1f69-426e-8633-ca4f70b80502\",\n  imageText:\"image1\"\n  }\n\nfunction ShowStuff({imageUrl, imageText}) {\n  return(\n    <div className=\"background-green\">\n      <img  className=\"img\" src={props.imageUrl} />\n        <p className=\"txt\">{props.imageText}</p>\n    </div>\n  );\n}\n\nexport default ShowStuff;*/\n\n/*function ShowStuff(props) {\n  return(\n    <div className=\"background-green\">\n      <h1>Just show some stuff</h1>\n      <p>The stuff is: {props.name}</p>\n    </div>\n  );\n}\n\nexport default ShowStuff;\n\n\nconst mongoose = require(\"mongoose\");\n\n// use recipes;\nmongoose.connect(\"mongodb://localhost/recipes\", { useNewUrlParser: true, useUnifiedTopology: true });\n\nasync function doStuff() {\n  const recipeSchema = new mongoose.Schema({\n    title: String,\n    description: String,\n    cookingTime: Number,\n    ingredients: [String]\n  });\n  \n  const Recipe = mongoose.model(\"Recipe\", recipeSchema);\n  \n  const pizza = new Recipe({\n    title: \"Pizza\",\n    description: \"Pizza is nice\",\n    cookingTime: 60,\n    ingredients: [\"tomato\", \"cheese\", \"onion\", \"Tuna\", \"Garlic\"]\n  });\n  \n  try {\n    const savedPizza = await pizza.save();\n    console.log(savedPizza[\"_id\"], \"has been saved\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  // Find first recipe with name 'pizza', but ignores case\n  const foundPizza = await Recipe.findOne({ title: /pizza/i });\n  console.log(\"Found a recipe:\", foundPizza);\n\n  const arrayResult = await Recipe.find({ title: /pizza/i });\n  console.log(\"Found recipes:\", arrayResult);\n\n  mongoose.disconnect();\n}\n\ndoStuff();\n\n*/","map":{"version":3,"sources":["/Users/admin/artwalkapp/src/ShowStuff.js"],"names":["React"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\n\n/*let props = {\n  imageUrl:\"https://res.cloudinary.com/glide/image/fetch/f_auto,w_300,h_300,c_lfill/https%3A%2F%2Ffirebasestorage.googleapis.com%2Fv0%2Fb%2Fglide-prod.appspot.com%2Fo%2Ficon-images%252Fanonymous-e7fcf338-8a49-44d2-9fcb-afd802a823c8.png%3Falt%3Dmedia%26token%3D161e099a-1f69-426e-8633-ca4f70b80502\",\n  imageText:\"image1\"\n  }\n\nfunction ShowStuff({imageUrl, imageText}) {\n  return(\n    <div className=\"background-green\">\n      <img  className=\"img\" src={props.imageUrl} />\n        <p className=\"txt\">{props.imageText}</p>\n    </div>\n  );\n}\n\nexport default ShowStuff;*/\n\n/*function ShowStuff(props) {\n  return(\n    <div className=\"background-green\">\n      <h1>Just show some stuff</h1>\n      <p>The stuff is: {props.name}</p>\n    </div>\n  );\n}\n\nexport default ShowStuff;\n\n\nconst mongoose = require(\"mongoose\");\n\n// use recipes;\nmongoose.connect(\"mongodb://localhost/recipes\", { useNewUrlParser: true, useUnifiedTopology: true });\n\nasync function doStuff() {\n  const recipeSchema = new mongoose.Schema({\n    title: String,\n    description: String,\n    cookingTime: Number,\n    ingredients: [String]\n  });\n  \n  const Recipe = mongoose.model(\"Recipe\", recipeSchema);\n  \n  const pizza = new Recipe({\n    title: \"Pizza\",\n    description: \"Pizza is nice\",\n    cookingTime: 60,\n    ingredients: [\"tomato\", \"cheese\", \"onion\", \"Tuna\", \"Garlic\"]\n  });\n  \n  try {\n    const savedPizza = await pizza.save();\n    console.log(savedPizza[\"_id\"], \"has been saved\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  // Find first recipe with name 'pizza', but ignores case\n  const foundPizza = await Recipe.findOne({ title: /pizza/i });\n  console.log(\"Found a recipe:\", foundPizza);\n\n  const arrayResult = await Recipe.find({ title: /pizza/i });\n  console.log(\"Found recipes:\", arrayResult);\n\n  mongoose.disconnect();\n}\n\ndoStuff();\n\n*/"]},"metadata":{},"sourceType":"module"}