{"ast":null,"code":"import React from 'react';\n\nconst mongoose = require(\"mongoose\"); // use recipes;\n\n\nmongoose.connect(\"mongodb://localhost/recipes\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n});\n\nasync function ShowStuff() {\n  const recipeSchema = new mongoose.Schema({\n    title: String,\n    description: String,\n    cookingTime: Number,\n    ingredients: [String]\n  });\n  const Recipe = mongoose.model(\"Recipe\", recipeSchema);\n  const pizza = new Recipe({\n    title: \"Pizza\",\n    description: \"Pizza is nice\",\n    cookingTime: 60,\n    ingredients: [\"tomato\", \"cheese\", \"onion\", \"Tuna\", \"Garlic\"]\n  });\n\n  try {\n    const savedPizza = await pizza.save();\n    console.log(savedPizza[\"_id\"], \"has been saved\");\n  } catch (error) {\n    console.error(error);\n  } // Find first recipe with name 'pizza', but ignores case\n\n\n  const foundPizza = await Recipe.findOne({\n    title: /pizza/i\n  });\n  console.log(\"Found a recipe:\", foundPizza);\n  const arrayResult = await Recipe.find({\n    title: /pizza/i\n  });\n  console.log(\"Found recipes:\", arrayResult);\n  mongoose.disconnect();\n}\n\n_c = ShowStuff;\nShowStuff();\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowStuff\");","map":{"version":3,"sources":["/Users/admin/artwalkapp/src/ShowStuff.js"],"names":["React","mongoose","require","connect","useNewUrlParser","useUnifiedTopology","ShowStuff","recipeSchema","Schema","title","String","description","cookingTime","Number","ingredients","Recipe","model","pizza","savedPizza","save","console","log","error","foundPizza","findOne","arrayResult","find","disconnect"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB,C,CAEA;;;AACAD,QAAQ,CAACE,OAAT,CAAiB,6BAAjB,EAAgD;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAAyBC,EAAAA,kBAAkB,EAAE;AAA7C,CAAhD;;AAGA,eAAeC,SAAf,GAA2B;AAEzB,QAAMC,YAAY,GAAG,IAAIN,QAAQ,CAACO,MAAb,CAAoB;AACvCC,IAAAA,KAAK,EAAEC,MADgC;AAEvCC,IAAAA,WAAW,EAAED,MAF0B;AAGvCE,IAAAA,WAAW,EAAEC,MAH0B;AAIvCC,IAAAA,WAAW,EAAE,CAACJ,MAAD;AAJ0B,GAApB,CAArB;AAOA,QAAMK,MAAM,GAAGd,QAAQ,CAACe,KAAT,CAAe,QAAf,EAAyBT,YAAzB,CAAf;AAEA,QAAMU,KAAK,GAAG,IAAIF,MAAJ,CAAW;AACvBN,IAAAA,KAAK,EAAE,OADgB;AAEvBE,IAAAA,WAAW,EAAE,eAFU;AAGvBC,IAAAA,WAAW,EAAE,EAHU;AAIvBE,IAAAA,WAAW,EAAE,CAAC,QAAD,EAAW,QAAX,EAAqB,OAArB,EAA8B,MAA9B,EAAsC,QAAtC;AAJU,GAAX,CAAd;;AAOA,MAAI;AACF,UAAMI,UAAU,GAAG,MAAMD,KAAK,CAACE,IAAN,EAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,UAAU,CAAC,KAAD,CAAtB,EAA+B,gBAA/B;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdF,IAAAA,OAAO,CAACE,KAAR,CAAcA,KAAd;AACD,GAvBwB,CAyBzB;;;AACA,QAAMC,UAAU,GAAG,MAAMR,MAAM,CAACS,OAAP,CAAe;AAAEf,IAAAA,KAAK,EAAE;AAAT,GAAf,CAAzB;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BE,UAA/B;AAEA,QAAME,WAAW,GAAG,MAAMV,MAAM,CAACW,IAAP,CAAY;AAAEjB,IAAAA,KAAK,EAAE;AAAT,GAAZ,CAA1B;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BI,WAA9B;AAEAxB,EAAAA,QAAQ,CAAC0B,UAAT;AACD;;KAjCcrB,S;AAmCfA,SAAS","sourcesContent":["import React from 'react';\nconst mongoose = require(\"mongoose\");\n\n// use recipes;\nmongoose.connect(\"mongodb://localhost/recipes\", { useNewUrlParser: true, useUnifiedTopology: true });\n\n\nasync function ShowStuff() {\n \n  const recipeSchema = new mongoose.Schema({\n    title: String,\n    description: String,\n    cookingTime: Number,\n    ingredients: [String]\n  });\n  \n  const Recipe = mongoose.model(\"Recipe\", recipeSchema);\n  \n  const pizza = new Recipe({\n    title: \"Pizza\",\n    description: \"Pizza is nice\",\n    cookingTime: 60,\n    ingredients: [\"tomato\", \"cheese\", \"onion\", \"Tuna\", \"Garlic\"]\n  });\n  \n  try {\n    const savedPizza = await pizza.save();\n    console.log(savedPizza[\"_id\"], \"has been saved\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  // Find first recipe with name 'pizza', but ignores case\n  const foundPizza = await Recipe.findOne({ title: /pizza/i });\n  console.log(\"Found a recipe:\", foundPizza);\n\n  const arrayResult = await Recipe.find({ title: /pizza/i });\n  console.log(\"Found recipes:\", arrayResult);\n\n  mongoose.disconnect();\n}\n\nShowStuff();"]},"metadata":{},"sourceType":"module"}