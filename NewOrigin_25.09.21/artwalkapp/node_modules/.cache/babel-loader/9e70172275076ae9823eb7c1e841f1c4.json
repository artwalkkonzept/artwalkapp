{"ast":null,"code":"var _jsxFileName = \"/Users/admin/artwalkapp/src/ShowStuff.js\";\nimport React from 'react';\nimport { Link } from \"@reach/router\";\n\nfunction ShowStuff(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"background-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, [/*#__PURE__*/React.createElement(Link, {\n    to: \"/image1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, \"Tour1\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/image2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 42\n    }\n  }, \"Tour2\"), /*#__PURE__*/React.createElement(Link, {\n    to: \"/image3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 75\n    }\n  }, \"Tour3\")].map(tour => /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/${tour}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, tour)))), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Just show some stuff\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, \"The stuff is: \", props.name));\n}\n\n_c = ShowStuff;\nexport default ShowStuff;\n/*let props = {\n  imageUrl:\"https://res.cloudinary.com/glide/image/fetch/f_auto,w_300,h_300,c_lfill/https%3A%2F%2Ffirebasestorage.googleapis.com%2Fv0%2Fb%2Fglide-prod.appspot.com%2Fo%2Ficon-images%252Fanonymous-e7fcf338-8a49-44d2-9fcb-afd802a823c8.png%3Falt%3Dmedia%26token%3D161e099a-1f69-426e-8633-ca4f70b80502\",\n  imageText:\"image1\"\n  }\n\nfunction ShowStuff({imageUrl, imageText}) {\n  return(\n    <div className=\"background-green\">\n      <img  className=\"img\" src={props.imageUrl} />\n        <p className=\"txt\">{props.imageText}</p>\n    </div>\n  );\n}\n\nexport default ShowStuff;*/\n\n/*Vconst mongoose = require(\"mongoose\");\n\n// use recipes;\nmongoose.connect(\"mongodb://localhost/recipes\", { useNewUrlParser: true, useUnifiedTopology: true });\n\nasync function doStuff() {\n  const recipeSchema = new mongoose.Schema({\n    title: String,\n    description: String,\n    cookingTime: Number,\n    ingredients: [String]\n  });\n  \n  const Recipe = mongoose.model(\"Recipe\", recipeSchema);\n  \n  const pizza = new Recipe({\n    title: \"Pizza\",\n    description: \"Pizza is nice\",\n    cookingTime: 60,\n    ingredients: [\"tomato\", \"cheese\", \"onion\", \"Tuna\", \"Garlic\"]\n  });\n  \n  try {\n    const savedPizza = await pizza.save();\n    console.log(savedPizza[\"_id\"], \"has been saved\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  // Find first recipe with name 'pizza', but ignores case\n  const foundPizza = await Recipe.findOne({ title: /pizza/i });\n  console.log(\"Found a recipe:\", foundPizza);\n\n  const arrayResult = await Recipe.find({ title: /pizza/i });\n  console.log(\"Found recipes:\", arrayResult);\n\n  mongoose.disconnect();\n}\n\ndoStuff();\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowStuff\");","map":{"version":3,"sources":["/Users/admin/artwalkapp/src/ShowStuff.js"],"names":["React","Link","ShowStuff","props","map","tour","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,eAArB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,sBAEE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,cAAC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAD,eAAkC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAlC,eAAmE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAnE,EAAoGC,GAApG,CAAwGC,IAAI,iBAC3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,IAAGA,IAAK,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBA,IAAvB,CADF,CADD,CADC,CADJ,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBF,KAAK,CAACG,IAAxB,CARF,CAFF;AAaD;;KAdQJ,S;AAgBT,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Link } from \"@reach/router\";\n\nfunction ShowStuff(props) {\n  return(\n  \n    <div className=\"background-green\">\n        <ul>\n      {[<Link to='/image1'>Tour1</Link>, <Link to='/image2'>Tour2</Link>, <Link to='/image3'>Tour3</Link>].map(tour =>\n        <li>\n          <Link to={`/${tour}`}>{tour}</Link>\n        </li>)}\n    </ul>\n      <h1>Just show some stuff</h1>\n      <p>The stuff is: {props.name}</p>\n    </div>\n  );\n}\n\nexport default ShowStuff;\n\n/*let props = {\n  imageUrl:\"https://res.cloudinary.com/glide/image/fetch/f_auto,w_300,h_300,c_lfill/https%3A%2F%2Ffirebasestorage.googleapis.com%2Fv0%2Fb%2Fglide-prod.appspot.com%2Fo%2Ficon-images%252Fanonymous-e7fcf338-8a49-44d2-9fcb-afd802a823c8.png%3Falt%3Dmedia%26token%3D161e099a-1f69-426e-8633-ca4f70b80502\",\n  imageText:\"image1\"\n  }\n\nfunction ShowStuff({imageUrl, imageText}) {\n  return(\n    <div className=\"background-green\">\n      <img  className=\"img\" src={props.imageUrl} />\n        <p className=\"txt\">{props.imageText}</p>\n    </div>\n  );\n}\n\nexport default ShowStuff;*/\n\n\n/*Vconst mongoose = require(\"mongoose\");\n\n// use recipes;\nmongoose.connect(\"mongodb://localhost/recipes\", { useNewUrlParser: true, useUnifiedTopology: true });\n\nasync function doStuff() {\n  const recipeSchema = new mongoose.Schema({\n    title: String,\n    description: String,\n    cookingTime: Number,\n    ingredients: [String]\n  });\n  \n  const Recipe = mongoose.model(\"Recipe\", recipeSchema);\n  \n  const pizza = new Recipe({\n    title: \"Pizza\",\n    description: \"Pizza is nice\",\n    cookingTime: 60,\n    ingredients: [\"tomato\", \"cheese\", \"onion\", \"Tuna\", \"Garlic\"]\n  });\n  \n  try {\n    const savedPizza = await pizza.save();\n    console.log(savedPizza[\"_id\"], \"has been saved\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  // Find first recipe with name 'pizza', but ignores case\n  const foundPizza = await Recipe.findOne({ title: /pizza/i });\n  console.log(\"Found a recipe:\", foundPizza);\n\n  const arrayResult = await Recipe.find({ title: /pizza/i });\n  console.log(\"Found recipes:\", arrayResult);\n\n  mongoose.disconnect();\n}\n\ndoStuff();\n\n*/"]},"metadata":{},"sourceType":"module"}