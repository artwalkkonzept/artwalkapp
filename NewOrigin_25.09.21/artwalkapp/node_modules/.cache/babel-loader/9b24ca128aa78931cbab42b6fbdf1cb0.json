{"ast":null,"code":"var _jsxFileName = \"/Users/admin/artwalkapp/src/ShowStuff.js\";\nimport React from 'react';\nimport names from '/Users/admin/artwalkapp/src/NameList.';\n\nfunction ShowStuff(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"background-green\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Just show some stuff\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, \"The stuff is: \", (props.name, props.names)));\n}\n\n_c = ShowStuff;\nexport default ShowStuff;\n/*\nconst mongoose = require(\"mongoose\");\n\n// use recipes;\nmongoose.connect(\"mongodb://localhost/recipes\", { useNewUrlParser: true, useUnifiedTopology: true });\n\nasync function doStuff() {\n  const recipeSchema = new mongoose.Schema({\n    title: String,\n    description: String,\n    cookingTime: Number,\n    ingredients: [String]\n  });\n  \n  const Recipe = mongoose.model(\"Recipe\", recipeSchema);\n  \n  const pizza = new Recipe({\n    title: \"Pizza\",\n    description: \"Pizza is nice\",\n    cookingTime: 60,\n    ingredients: [\"tomato\", \"cheese\", \"onion\", \"Tuna\", \"Garlic\"]\n  });\n  \n  try {\n    const savedPizza = await pizza.save();\n    console.log(savedPizza[\"_id\"], \"has been saved\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  // Find first recipe with name 'pizza', but ignores case\n  const foundPizza = await Recipe.findOne({ title: /pizza/i });\n  console.log(\"Found a recipe:\", foundPizza);\n\n  const arrayResult = await Recipe.find({ title: /pizza/i });\n  console.log(\"Found recipes:\", arrayResult);\n\n  mongoose.disconnect();\n}\n\ndoStuff();\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowStuff\");","map":{"version":3,"sources":["/Users/admin/artwalkapp/src/ShowStuff.js"],"names":["React","names","ShowStuff","props","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,uCAAlB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACxB,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBA,KAAK,CAACC,IAAN,EAAYD,KAAK,CAACF,KAApC,EAFF,CADF;AAMD;;KAPQC,S;AAST,eAAeA,SAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport names from '/Users/admin/artwalkapp/src/NameList.';\n\nfunction ShowStuff(props) {\n  return(\n    <div className=\"background-green\">\n      <h1>Just show some stuff</h1>\n      <p>The stuff is: {props.name, props.names}</p>\n    </div>\n  );\n}\n\nexport default ShowStuff;\n\n/*\nconst mongoose = require(\"mongoose\");\n\n// use recipes;\nmongoose.connect(\"mongodb://localhost/recipes\", { useNewUrlParser: true, useUnifiedTopology: true });\n\nasync function doStuff() {\n  const recipeSchema = new mongoose.Schema({\n    title: String,\n    description: String,\n    cookingTime: Number,\n    ingredients: [String]\n  });\n  \n  const Recipe = mongoose.model(\"Recipe\", recipeSchema);\n  \n  const pizza = new Recipe({\n    title: \"Pizza\",\n    description: \"Pizza is nice\",\n    cookingTime: 60,\n    ingredients: [\"tomato\", \"cheese\", \"onion\", \"Tuna\", \"Garlic\"]\n  });\n  \n  try {\n    const savedPizza = await pizza.save();\n    console.log(savedPizza[\"_id\"], \"has been saved\");\n  } catch (error) {\n    console.error(error);\n  }\n\n  // Find first recipe with name 'pizza', but ignores case\n  const foundPizza = await Recipe.findOne({ title: /pizza/i });\n  console.log(\"Found a recipe:\", foundPizza);\n\n  const arrayResult = await Recipe.find({ title: /pizza/i });\n  console.log(\"Found recipes:\", arrayResult);\n\n  mongoose.disconnect();\n}\n\ndoStuff();\n\n*/"]},"metadata":{},"sourceType":"module"}