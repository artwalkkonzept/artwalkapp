{"ast":null,"code":"var _jsxFileName = \"/Users/admin/artwalkapp/src/Nav.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst loadMenu = () => Promise.resolve([{\n  id: \"1\",\n  name: \"One\",\n  children: [{\n    id: \"1.1\",\n    name: \"One - one\",\n    children: [{\n      id: \"1.1.1\",\n      name: \"One - one - one\"\n    }, {\n      id: \"1.1.2\",\n      name: \"One - one - two\"\n    }, {\n      id: \"1.1.3\",\n      name: \"One - one - three\"\n    }]\n  }]\n}, {\n  id: \"2\",\n  name: \"Two\",\n  children: [{\n    id: \"2.1\",\n    name: \"Two - one\"\n  }]\n}, {\n  id: \"3\",\n  name: \"Three\",\n  children: [{\n    id: \"3.1\",\n    name: \"Three - one\",\n    children: [{\n      id: \"3.1.1\",\n      name: \"Three - one - one\",\n      children: [{\n        id: \"3.1.1.1\",\n        name: \"Three - one - one - one\",\n        children: [{\n          id: \"3.1.1.1.1\",\n          name: \"Three - one - one - one - one\"\n        }]\n      }]\n    }]\n  }]\n}, {\n  id: \"4\",\n  name: \"Four\"\n}, {\n  id: \"5\",\n  name: \"Five\",\n  children: [{\n    id: \"5.1\",\n    name: \"Five - one\"\n  }, {\n    id: \"5.2\",\n    name: \"Five - two\"\n  }, {\n    id: \"5.3\",\n    name: \"Five - three\"\n  }, {\n    id: \"5.4\",\n    name: \"Five - four\"\n  }]\n}, {\n  id: \"6\",\n  name: \"Six\"\n}]);\n\nconst {\n  Component,\n  Fragment\n} = React;\nconst {\n  Button,\n  Collapse,\n  Input\n} = Reactstrap;\n\nconst replaceNode = (replacer, node, idPath, i) => {\n  if (i <= idPath.length && !node) {\n    // Not at target node yet, create nodes in between\n    node = {};\n  }\n\n  if (i > idPath.length) {\n    // Reached target node\n    return replacer(node);\n  } // Construct ID that matches this depth - depth meaning\n  // the amount of dots in between the ID\n\n\n  const id = idPath.slice(0, i).join(\".\");\n  return { ...node,\n    // Recurse\n    [id]: replaceNode(replacer, node[id], idPath, i + 1)\n  };\n};\n\nconst replaceNodeById = (node, id, visitor) => {\n  // Pass array of the id's parts instead of working on the string\n  // directly - easy way to handle multi-number ID parts e.g. 3.1.15.32\n  return replaceNode(visitor, node, id.split(\".\"), 1);\n};\n\nconst expandedNode = () => ({});\n\nconst unexpandedNode = () => undefined;\n\nconst toggleNodeById = (node, id) => replaceNodeById(node, id, oldNode => oldNode ? unexpandedNode() : expandedNode());\n\nconst expandNodeById = (node, id) => replaceNodeById(node, id, oldNode => expandedNode());\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: [],\n      openMenus: {},\n      checkedMenus: {}\n    };\n    this.handleMenuToggle = this.handleMenuToggle.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n  }\n\n  render() {\n    const {\n      menuItems,\n      openMenus,\n      checkedMenus\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"row\",\n        columnCount: 3,\n        justifyContent: \"space-between\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          paddingTop: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(MenuItemContainer, {\n          openMenus: openMenus,\n          menuItems: menuItems,\n          onMenuToggle: this.handleMenuToggle,\n          checkedMenus: checkedMenus,\n          onChecked: this.handleChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          marginLeft: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Menu state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(openMenus, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: \"10px\",\n          width: \"177px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Checkbox state\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: JSON.stringify(checkedMenus, null, 2)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n\n  componentDidMount() {\n    const {\n      initialOpenMenuId,\n      initialCheckedMenuIds\n    } = this.props;\n    loadMenu().then(menuItems => {\n      const initialMenuState = {};\n      this.setState({\n        menuItems,\n        openMenus: expandNodeById(initialMenuState, initialOpenMenuId),\n        checkedMenus: initialCheckedMenuIds.reduce((acc, val) => ({ ...acc,\n          [val]: true\n        }), {})\n      });\n    });\n  }\n\n  handleMenuToggle(toggledId) {\n    this.setState(({\n      openMenus\n    }) => ({\n      openMenus: toggleNodeById(openMenus, toggledId)\n    }));\n  }\n\n  handleChecked(toggledId) {\n    this.setState(({\n      checkedMenus\n    }) => ({\n      checkedMenus: { ...checkedMenus,\n        [toggledId]: checkedMenus[toggledId] ? unexpandedNode() : expandedNode()\n      }\n    }));\n  }\n\n}\n\nfunction MenuItemContainer({\n  openMenus,\n  onMenuToggle,\n  checkedMenus,\n  onChecked,\n  menuItems = []\n}) {\n  if (!menuItems.length) return null;\n\n  const renderMenuItem = menuItem => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_jsxDEV(MenuItem, {\n      openMenus: openMenus,\n      onMenuToggle: onMenuToggle,\n      checkedMenus: checkedMenus,\n      onChecked: onChecked,\n      ...menuItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)\n  }, menuItem.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: menuItems.map(renderMenuItem)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 10\n  }, this);\n}\n\n_c = MenuItemContainer;\n\nclass MenuItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n  }\n\n  render() {\n    const {\n      children,\n      name,\n      id,\n      openMenus,\n      onMenuToggle,\n      checkedMenus,\n      onChecked\n    } = this.props;\n    const isLastChild = !children;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: isLastChild ? this.handleChecked : this.handleToggle,\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), isLastChild && /*#__PURE__*/_jsxDEV(Input, {\n        addon: true,\n        type: \"checkbox\",\n        onChange: this.handleChecked,\n        checked: !!checkedMenus[id],\n        value: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        isOpen: openMenus ? !!openMenus[id] : false,\n        children: /*#__PURE__*/_jsxDEV(MenuItemContainer, {\n          menuItems: children // Pass down child menus' state\n          ,\n          openMenus: openMenus && openMenus[id],\n          onMenuToggle: onMenuToggle,\n          checkedMenus: checkedMenus,\n          onChecked: onChecked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this);\n  }\n\n  handleToggle() {\n    this.props.onMenuToggle(this.props.id);\n  }\n\n  handleChecked() {\n    this.props.onChecked(this.props.id);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(Menu, {\n  initialOpenMenuId: \"3.1.1.1\",\n  initialCheckedMenuIds: [\"3.1.1.1.1\"]\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 256,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"MenuItemContainer\");","map":{"version":3,"sources":["/Users/admin/artwalkapp/src/Nav.js"],"names":["loadMenu","Promise","resolve","id","name","children","Component","Fragment","React","Button","Collapse","Input","Reactstrap","replaceNode","replacer","node","idPath","i","length","slice","join","replaceNodeById","visitor","split","expandedNode","unexpandedNode","undefined","toggleNodeById","oldNode","expandNodeById","Menu","constructor","props","state","menuItems","openMenus","checkedMenus","handleMenuToggle","bind","handleChecked","render","display","flexDirection","columnCount","justifyContent","paddingTop","padding","marginLeft","JSON","stringify","width","componentDidMount","initialOpenMenuId","initialCheckedMenuIds","then","initialMenuState","setState","reduce","acc","val","toggledId","MenuItemContainer","onMenuToggle","onChecked","renderMenuItem","menuItem","map","MenuItem","handleToggle","isLastChild","ReactDOM","document","getElementById"],"mappings":"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","sourcesContent":["const loadMenu = () =>\n  Promise.resolve([\n    {\n      id: \"1\",\n      name: \"One\",\n      children: [\n        {\n          id: \"1.1\",\n          name: \"One - one\",\n          children: [\n            { id: \"1.1.1\", name: \"One - one - one\" },\n            { id: \"1.1.2\", name: \"One - one - two\" },\n            { id: \"1.1.3\", name: \"One - one - three\" }\n          ]\n        }\n      ]\n    },\n    { id: \"2\", name: \"Two\", children: [{ id: \"2.1\", name: \"Two - one\" }] },\n    {\n      id: \"3\",\n      name: \"Three\",\n      children: [\n        {\n          id: \"3.1\",\n          name: \"Three - one\",\n          children: [\n            {\n              id: \"3.1.1\",\n              name: \"Three - one - one\",\n              children: [\n                {\n                  id: \"3.1.1.1\",\n                  name: \"Three - one - one - one\",\n                  children: [\n                    { id: \"3.1.1.1.1\", name: \"Three - one - one - one - one\" }\n                  ]\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    },\n    { id: \"4\", name: \"Four\" },\n    {\n      id: \"5\",\n      name: \"Five\",\n      children: [\n        { id: \"5.1\", name: \"Five - one\" },\n        { id: \"5.2\", name: \"Five - two\" },\n        { id: \"5.3\", name: \"Five - three\" },\n        { id: \"5.4\", name: \"Five - four\" }\n      ]\n    },\n    { id: \"6\", name: \"Six\" }\n  ]);\n\nconst { Component, Fragment } = React;\nconst { Button, Collapse, Input } = Reactstrap;\n\nconst replaceNode = (replacer, node, idPath, i) => {\n  if (i <= idPath.length && !node) {\n    // Not at target node yet, create nodes in between\n    node = {};\n  }\n  if (i > idPath.length) {\n    // Reached target node\n    return replacer(node);\n  }\n\n  // Construct ID that matches this depth - depth meaning\n  // the amount of dots in between the ID\n  const id = idPath.slice(0, i).join(\".\");\n  return {\n    ...node,\n    // Recurse\n    [id]: replaceNode(replacer, node[id], idPath, i + 1)\n  };\n};\n\nconst replaceNodeById = (node, id, visitor) => {\n  // Pass array of the id's parts instead of working on the string\n  // directly - easy way to handle multi-number ID parts e.g. 3.1.15.32\n  return replaceNode(visitor, node, id.split(\".\"), 1);\n};\n\nconst expandedNode = () => ({});\nconst unexpandedNode = () => undefined;\n\nconst toggleNodeById = (node, id) =>\n  replaceNodeById(node, id, oldNode =>\n    oldNode ? unexpandedNode() : expandedNode()\n  );\nconst expandNodeById = (node, id) =>\n  replaceNodeById(node, id, oldNode => expandedNode());\n\nclass Menu extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: [],\n      openMenus: {},\n      checkedMenus: {}\n    };\n    this.handleMenuToggle = this.handleMenuToggle.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n  }\n\n  render() {\n    const { menuItems, openMenus, checkedMenus } = this.state;\n\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          columnCount: 3,\n          justifyContent: \"space-between\"\n        }}\n      >\n        <div style={{ paddingTop: \"10px\" }}>\n          <MenuItemContainer\n            openMenus={openMenus}\n            menuItems={menuItems}\n            onMenuToggle={this.handleMenuToggle}\n            checkedMenus={checkedMenus}\n            onChecked={this.handleChecked}\n          />\n        </div>\n        <div style={{ padding: \"10px\", marginLeft: \"auto\" }}>\n          <p>Menu state</p>\n          <pre>{JSON.stringify(openMenus, null, 2)}</pre>\n        </div>\n        <div style={{ padding: \"10px\", width: \"177px\" }}>\n          <p>Checkbox state</p>\n          <pre>{JSON.stringify(checkedMenus, null, 2)}</pre>\n        </div>\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    const { initialOpenMenuId, initialCheckedMenuIds } = this.props;\n\n    loadMenu().then(menuItems => {\n      const initialMenuState = {};\n      this.setState({\n        menuItems,\n        openMenus: expandNodeById(initialMenuState, initialOpenMenuId),\n        checkedMenus: initialCheckedMenuIds.reduce(\n          (acc, val) => ({ ...acc, [val]: true }),\n          {}\n        )\n      });\n    });\n  }\n\n  handleMenuToggle(toggledId) {\n    this.setState(({ openMenus }) => ({\n      openMenus: toggleNodeById(openMenus, toggledId)\n    }));\n  }\n\n  handleChecked(toggledId) {\n    this.setState(({ checkedMenus }) => ({\n      checkedMenus: {\n        ...checkedMenus,\n        [toggledId]: checkedMenus[toggledId] ? unexpandedNode() : expandedNode()\n      }\n    }));\n  }\n}\n\nfunction MenuItemContainer({\n  openMenus,\n  onMenuToggle,\n  checkedMenus,\n  onChecked,\n  menuItems = []\n}) {\n  if (!menuItems.length) return null;\n\n  const renderMenuItem = menuItem => (\n    <li key={menuItem.id}>\n      <MenuItem\n        openMenus={openMenus}\n        onMenuToggle={onMenuToggle}\n        checkedMenus={checkedMenus}\n        onChecked={onChecked}\n        {...menuItem}\n      />\n    </li>\n  );\n\n  return <ul>{menuItems.map(renderMenuItem)}</ul>;\n}\n\nclass MenuItem extends Component {\n  constructor(props) {\n    super(props);\n    this.handleToggle = this.handleToggle.bind(this);\n    this.handleChecked = this.handleChecked.bind(this);\n  }\n\n  render() {\n    const {\n      children,\n      name,\n      id,\n      openMenus,\n      onMenuToggle,\n      checkedMenus,\n      onChecked\n    } = this.props;\n\n    const isLastChild = !children;\n    return (\n      <Fragment>\n        <Button onClick={isLastChild ? this.handleChecked : this.handleToggle}>\n          {name}\n        </Button>\n        {isLastChild && (\n          <Input\n            addon\n            type=\"checkbox\"\n            onChange={this.handleChecked}\n            checked={!!checkedMenus[id]}\n            value={id}\n          />\n        )}\n\n        <Collapse isOpen={openMenus ? !!openMenus[id] : false}>\n          <MenuItemContainer\n            menuItems={children}\n            // Pass down child menus' state\n            openMenus={openMenus && openMenus[id]}\n            onMenuToggle={onMenuToggle}\n            checkedMenus={checkedMenus}\n            onChecked={onChecked}\n          />\n        </Collapse>\n      </Fragment>\n    );\n  }\n\n  handleToggle() {\n    this.props.onMenuToggle(this.props.id);\n  }\n\n  handleChecked() {\n    this.props.onChecked(this.props.id);\n  }\n}\n\nReactDOM.render(\n  <Menu initialOpenMenuId=\"3.1.1.1\" initialCheckedMenuIds={[\"3.1.1.1.1\"]} />,\n  document.getElementById(\"root\")\n);"]},"metadata":{},"sourceType":"module"}